/* You can add global styles to this file, and also import other style files */
@import '~@angular/material/theming';
// Plus imports for other components in your app.
//TODO Janel Open sans, Sans-serif
$custom-typography: mat-typography-config(
  $font-family: 'sans-serif'
);
// Override typography for all Angular Material, including mat-base-typography and all components.
@include angular-material-typography($custom-typography);
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// If this mixin is included multiple times, your application will end up with multiple copies of these common styles.
// @include mat-core();
// Override the typography in the core CSS.
@include mat-core($custom-typography);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$nx-primary-scheme: (
  50: #e9f5fb,
  100: #c5e5f5,
  200: #92ceec,
  300: #66bae5,
  400: #3ca7de,
  500: #218dc4,
  600: #1d7eaf,
  // primary
    700: #15709e,
  800: #0e618b,
  900: #085277,
  contrast: (
    //TODO JANEL verify these with Marina
      50: rgba(0, 0, 0, 0.87),
    100: rgba(0, 0, 0, 0.87),
    200: rgba(0, 0, 0, 0.87),
    300: rgba(0, 0, 0, 0.87),
    400: rgba(0, 0, 0, 0.87),
    500: rgba(0, 0, 0, 0.87),
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff
  )
);

$nx-accent-scheme: (
  50: #e0f4f6,
  100: #b3e5e9,
  200: #80d3da,
  300: #00a7b5,
  400: #0093a3,
  500: #007e8f,
  //500 is our primary.  500 is what Material would choose as the primary if we didn't specify below
    600: #007385,
  700: #006375,
  800: #005161,
  900: #003e4d,
  contrast: (
    //TODO JANEL verify these with Marina
      50: #333,
    100: #333,
    200: #333,
    300: #333,
    400: #333,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff
  )
);
// you must include the contrast colors!
$nx-warn: (
  100: #d0021b,
  500: #d0021b,
  700: #d0021b,
  contrast: (
    //TODO JANEL verify these with Marina
      100: #ffffff,
    500: #ffffff,
    700: #ffffff
  )
);
//primary , accent, warn, success, info
$custom-collection: (
  warning: #cf811c,
  success: #2d841f,
  danger: #d0021b,
  info: #007dae,
  nx-black: #000000,
  nx-dark-grey: #333333,
  nx-grey: #858585,
  nx-light-grey: #d8d8d8,
  nx-washed-grey: #f8f8f8,
  nx-white: #ffffff,
  contrast: (
    //TODO JANEL verify these with Marina
      warning: #000000,
    success: #ffffff,
    danger: #ffffff,
    info: #ffffff,
    nx-black: #ffffff,
    nx-dark-grey: #ffffff,
    nx-grey: #000000,
    //TODO JANEL use dark grey instead of black?
      nx-light-grey: #000000,
    nx-washed-grey: #000000,
    nx-white: #000000
  )
);

////////////////////////////////////////////////////////////////////// // Convert maps into 'palettes'
// mat-palette accepts $palette-name, main, lighter and darker variants
// If no numbers are provided Angular Material selects sensible defaults $default: 500, $lighter: 100, $darker: 700.
$nx-primary-palette: mat-palette($nx-primary-scheme, 600, 50, 900);
$nx-accent-palette: mat-palette($nx-accent-scheme, 500, 50, 900);
//$nx-warn:    mat-palette($mat-red);  // you can make a palette out of their pre-defined colors
$nx-warn-palette: mat-palette($nx-warn); // or you can use your own.
//For the other colors (info, success) that aren't a part of the theme elements (primary, access, warn)
//you can create a palette here
$nx-other-palette: mat-palette($custom-collection, custom);
///////////////////////////////// START Create 'theme' from palettes /////////////////////////////////////////////////// // //
// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
// Angular's theme has 3 colors (primary, access, warn(optional))
// The warn palette is optional (defaults to red).
$nx-light-theme: mat-light-theme(
  (
    color: (
      primary: $nx-primary-palette,
      accent: $nx-accent-palette,
      warn: $nx-warn-palette
    )
  )
);
//TODO JANEL what about the theme background colors?  I think those do get added to the theme

//// ////////////// START custom other colors in theme:
// Then you can merge your "other" palette to the theme after mat-light-theme row like this
$nx-light-theme: map_merge(
  $nx-light-theme,
  (
    custom: $nx-other-palette
  )
);
// After this you have one object where every color is located.
// And may I suggest you make general custom object for this like this
$nx-custom: map-get($nx-light-theme, custom);
$nx-greys: map-get($nx-light-theme, custom);
// Then you can use it in your component like this
button.nx-success {
  background-color: mat-color($nx-custom, success);
  color: mat-color($nx-custom, success-contrast);
}
button.nx-info {
  background-color: mat-color($nx-custom, info);
  color: mat-color($nx-custom, info-contrast);
}
button.nx-warn {
  background-color: mat-color($nx-custom, warning);
  color: mat-color($nx-custom, warning-contrast);
}

button.nx-black {
  background-color: mat-color($nx-greys, nx-black);
  color: mat-color($nx-greys, nx-black-contrast);
}
button.nx-dark-grey {
  background-color: mat-color($nx-greys, nx-dark-grey);
  color: mat-color($nx-greys, nx-dark-grey-contrast);
}
button.nx-grey {
  background-color: mat-color($nx-greys, nx-grey);
  color: mat-color($nx-greys, nx-grey-contrast);
}
button.nx-light-grey {
  background-color: mat-color($nx-greys, nx-light-grey);
  color: mat-color($nx-greys, nx-light-grey-contrast);
}
button.nx-washed-grey {
  background-color: mat-color($nx-greys, nx-washed-grey);
  color: mat-color($nx-greys, nx-washed-grey-contrast);
}
button.nx-white {
  background-color: mat-color($nx-greys, nx-white);
  color: mat-color($nx-greys, nx-white-contrast);
}

@include angular-material-theme($nx-light-theme);

$nx-dark-theme: mat-dark-theme(
  $nx-primary-palette,
  $nx-accent-palette,
  mat-palette($mat-purple)
);

.darkMode {
  @include angular-material-color($nx-dark-theme);
}
